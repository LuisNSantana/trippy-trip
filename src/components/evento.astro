---
// Importaciones necesarias
import { client } from "../../lib/sanity";
import ContentSection from "./content-section.astro";
import { Image } from "astro:assets";
import { urlFor } from "../../lib/urlForImage";

// Fetch de los datos de eventos
const eventos = await client.fetch(
  `*[_type == "event"] {
    "title": title,
    "slug": slug.current,
    "url": url,
    "image": image.asset->url,
    "content": content[]{
      "text": children[].text,
      "imageUrl": asset->url
    }
  }`
);

// Filtro para asegurar que solo se incluyan eventos con imágenes
const eventosConImagen = eventos.filter(evento => evento.image);

// Tamaños y dimensiones predefinidos para las imágenes
const widths = [450, 800];
const sizes = "(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw";
---

<ContentSection title="Eventos" id="evento">
  <Fragment slot="lead">
    Explora la sección de eventos, descubre <span class="text-primary">Experiencias únicas</span> y crea <span class="text-primary">recuerdos inolvidables</span>. ¡No te los pierdas!
  </Fragment>
  <div class="max-w-6xl space-y-2">
    {eventosConImagen.length > 0 && (
      <ul class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
        {eventosConImagen.map((evento, index) => {
          // Generación de la URL de la imagen con fallback para errores de carga
          const imageUrl = urlFor(evento.image).url() || '/fallback-image-url.jpg'; // Asegúrate de tener una imagen de fallback disponible

          return (
            <li key={evento.slug}>
              <a class="group aspect-video hover:!text-default" href={`evento/${evento.slug}`}>
                <figure class="relative h-full w-full overflow-hidden">
                  <Image
                    class="h-full w-full bg-cover object-cover transition-all duration-300 group-hover:scale-110 group-hover:opacity-20 group-focus:scale-110 group-focus:opacity-20"
                    src={imageUrl}  // Uso de la variable imageUrl
                    width={widths[0]}  // Ajuste basado en las dimensiones deseadas
                    height={(widths[0] / 16) * 9}  // Ajuste para mantener una proporción 16:9
                    sizes={sizes}
                    alt={`Imagen de ${evento.title}`}
                  />
                  <figcaption class="absolute inset-0">
                    <div class="flex h-full flex-col items-center justify-center gap-2 opacity-0 transition-all duration-300 group-hover:opacity-100 group-focus:opacity-100">
                      <h3 class="text-center font-extrabold uppercase text-xl">
                        {evento.title}
                      </h3>
                      <p class="border border-current px-4 py-2">{evento.url}</p>
                    </div>
                  </figcaption>
                </figure>
              </a>
            </li>
          );
        })}
      </ul>
    )}
    <p class="text-right text-sm">
      <a class="text-primary" href="/more-events">...and more &rarr;</a>
    </p>
  </div>
</ContentSection>
